channel_groups = {
    # Shank index.
    0:
        {
            # List of channels to keep for spike detection.
            'channels': list(range(0,12)),

            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
            'graph': [
                ( 0, 1), ( 0,  2), ( 0,  3),
                ( 1, 2), ( 1,  3),
                ( 2, 3),
                ( 4, 5), ( 4,  6), ( 4,  7),
                ( 5, 6), ( 5,  7),
                ( 6, 7),
                ( 8, 9), ( 8, 10), ( 8, 11),
                ( 9,10), ( 9, 11),
                (10,11),
            ],

            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
            'geometry': {
                11: ( 150, 450),
                10: ( 150, 150),
                9: ( 150,-150),
                8: ( 150,-450),
                7: (   0, 450),
                6: (   0, 150),
                5: (   0,-150),
                4: (   0,-450),
                3: (-150, 450),
                2: (-150, 150),
                1: (-150,-150),
                0: (-150,-450),
            }
        },
    1:
        {
            # List of channels to keep for spike detection.
            'channels': list(range(12,24)),

            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
            'graph': [
                (12,13), (12, 14), (12, 15),
                (13,14), (13, 15),
                (14,15),
                (16,17), (16, 18), (16, 19),
                (17,18), (17, 19),
                (18,19),
                (20,21), (20, 22), (20, 23),
                (21,22), (21, 23),
                (22,23),
            ],

            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
            'geometry': {
                23: ( 150, 450),
                22: ( 150, 150),
                21: ( 150,-150),
                20: ( 150,-450),
                19: (   0, 450),
                18: (   0, 150),
                17: (   0,-150),
                16: (   0,-450),
                15: (-150, 450),
                14: (-150, 150),
                13: (-150,-150),
                12: (-150,-450),
            }
    }
}
